"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[335],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),p=u(t),f=o,y=p["".concat(c,".").concat(f)]||p[f]||d[f]||l;return t?r.createElement(y,i(i({ref:n},s),{},{components:t})):r.createElement(y,i({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,i=new Array(l);i[0]=p;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1735:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var r=t(7462),o=t(3366),l=(t(7294),t(3905)),i=["components"],a={sidebar_position:3},c="\u8bbe\u7f6e\u5355\u5143\u683c\u6837\u5f0f-\u5bfc\u51fa",u={unversionedId:"tutorial-extras/export-cell-style",id:"tutorial-extras/export-cell-style",isDocsHomePage:!1,title:"\u8bbe\u7f6e\u5355\u5143\u683c\u6837\u5f0f-\u5bfc\u51fa",description:"\u76ee\u524d\u652f\u6301\u5355\u5143\u683c\u3001\u5b57\u4f53\u3001\u586b\u5145\u989c\u8272\u3001\u5bf9\u9f50\u65b9\u5f0f\u7684\u8bbe\u7f6e",source:"@site/docs/tutorial-extras/export-cell-style.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/export-cell-style",permalink:"/table-xlsx/en/docs/tutorial-extras/export-cell-style",editUrl:"https://github.com/PengChen96/table-xlsx/edit/master/website/docs/tutorial-extras/export-cell-style.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Grouping Table Head",permalink:"/table-xlsx/en/docs/tutorial-extras/grouping-columns"},next:{title:"\u8bbe\u7f6e\u884c\u6837\u5f0f-\u5bfc\u51fa",permalink:"/table-xlsx/en/docs/tutorial-extras/export-row-style"}},s=[],d={toc:s};function p(e){var n=e.components,t=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u8bbe\u7f6e\u5355\u5143\u683c\u6837\u5f0f-\u5bfc\u51fa"},"\u8bbe\u7f6e\u5355\u5143\u683c\u6837\u5f0f-\u5bfc\u51fa"),(0,l.kt)("p",null,"\u76ee\u524d\u652f\u6301\u5355\u5143\u683c\u3001\u5b57\u4f53\u3001\u586b\u5145\u989c\u8272\u3001\u5bf9\u9f50\u65b9\u5f0f\u7684\u8bbe\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import { Button, Table } from 'antd';\n// import { exportFile } from 'table-xlsx';\nfunction MyComponent() {\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 100,\n      txHeaderCellStyle: { fillFgColorRgb: 'FF8040' },\n      onTxBodyCell: () => {\n        return {\n          style: { fillFgColorRgb: 'EEEEE0' }\n        }\n      } \n    },\n    {\n      title: 'Other',\n      txHeaderCellStyle: { \n        fillFgColorRgb: 'EEEEE0',\n        fontColorRgb: 'FF8040',\n      },\n      children: [\n        {\n          title: 'Age',\n          dataIndex: 'age',\n          key: 'age',\n          width: 100,\n          txHeaderCellStyle: { fillFgColorRgb: 'FF8040' },\n        },\n        {\n          title: 'Address',\n          txHeaderCellStyle: { fontColorRgb: 'FF8040' },\n          children: [\n            {\n              title: 'Street',\n              dataIndex: 'street',\n              key: 'street',\n              width: 100,\n              txHeaderCellStyle: { fillFgColorRgb: 'FF8040' },\n              onTxBodyCell: (record, index) => {\n                let style;\n                if (index === 2) {\n                  style = { fontColorRgb: 'FF0000', fontBold: true };\n                }\n                return { style }\n              },\n            },\n            {\n              title: 'Block',\n              txHeaderCellStyle: { fontColorRgb: 'FF8040' },\n              children: [\n                {\n                  title: 'Building',\n                  dataIndex: 'building',\n                  key: 'building',\n                  width: 100,\n                  txHeaderCellStyle: { fillFgColorRgb: 'FF8040' },\n                  onTxBodyCell: (record, index) => {\n                    let style;\n                    if (index === 1 || index === 2) {\n                      style = { fontColorRgb: 'FF0000', fontBold: true };\n                    }\n                    return { style }\n                  },\n                },\n                {\n                  title: 'Door No.',\n                  dataIndex: 'number',\n                  key: 'number',\n                  width: 100,\n                  txHeaderCellStyle: { \n                    borderColorRgb: 'FF0000',\n                    fontColorRgb: 'FF8040'\n                  },\n                  onTxBodyCell: () => {\n                    return { \n                      style : { fontColorRgb: 'FF0000', fontBold: true }\n                    }\n                  },\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ];\n    \n  const dataSource = [];\n  for (let i = 0; i < 3; i++) {\n    dataSource.push({\n      key: i,\n      name: 'John Brown',\n      age: i + 1,\n      street: 'Lake Park',\n      building: 'C',\n      number: 2035,\n      companyAddress: 'Lake Street 42',\n      companyName: 'SoftLake Co',\n      gender: 'M',\n    });\n  }\n\n  const onExportFileClick = () => {\n    exportFile({\n      columns: columns,\n      dataSource: dataSource,\n      bodyCellStyle: {\n        alignmentHorizontal: 'center',\n      },\n    });\n  };\n  return (\n    <div>\n    <Button onClick={() => onExportFileClick()}>export</Button>\n    <div>\n      <Table\n        style={{marginTop: 20}}\n        dataSource={dataSource}\n        columns={columns}\n        bordered\n        size={'small'}\n        pagination={false}\n      />\n    </div>\n    </div>\n  );\n\n}\n")))}p.isMDXComponent=!0}}]);